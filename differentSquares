//Given a rectangular matrix containing only digits, calculate the number of different 2 × 2 squares in it.
//
//Example
//
//For
//
//matrix = [[1, 2, 1],
//[2, 2, 2],
//[2, 2, 2],
//[1, 2, 3],
//[2, 2, 1]]
//the output should be
//differentSquares(matrix) = 6.
//
//Here are all 6 different 2 × 2 squares:
//
//1 2
//2 2
//2 1
//2 2
//2 2
//2 2
//2 2
//1 2
//2 2
//2 3
//2 3
//2 1
//Input/Output
//
//[execution time limit] 3 seconds (kt)
//
//[input] array.array.integer matrix
//
//Guaranteed constraints:
//1 ≤ matrix.length ≤ 100,
//1 ≤ matrix[i].length ≤ 100,
//0 ≤ matrix[i][j] ≤ 9.
//
//[output] integer
//
//The number of different 2 × 2 squares in matrix.
//-------------------------------Code-------------------------------------//
fun differentSquares(matrix: MutableList<MutableList<Int>>): Int {
  val set = HashSet<String>()
    for (i in 0 until matrix.size - 1) {
        for (j in 0 until matrix[0].size - 1) {
            val temp =
                matrix[i][j].toString() + matrix[i][j + 1].toString() + matrix[i + 1][j].toString() + matrix[i + 1][j + 1].toString()
            set.add(temp)
        }
    }
    return set.size
}
